{"remainingRequest":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\src\\views\\Products.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\src\\views\\Products.vue","mtime":1559379980453},{"path":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\vue-cli-ui\\cli3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport $ from \"jquery\"; //載入Jquery套件 因為$是Jquery的 元件無法使用 要載入\r\nimport Pagination from \"../components/Pagination.vue\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      temProduct: {},\r\n      isNew: false,\r\n      isLoading: false,\r\n      status: {\r\n        fileLoadiing: false\r\n      },\r\n      pagination: {}\r\n    };\r\n  },\r\n  components: {\r\n    Pagination\r\n  },\r\n  methods: {\r\n    getProducts(page = 1) {\r\n      //ES6用法 如果有傳參數近來 使用傳進來的參數 如果沒有 使用預設值1\r\n      const api = `${process.env.VUE_APP_APIPATH}/api/${\r\n        process.env.VUE_APP_COUSTOMPATH\r\n      }/admin/products?page=${page}`;\r\n      const vm = this;\r\n      vm.isLoading = true;\r\n      console.log(api);\r\n      this.$http.get(api).then(response => {\r\n        console.log(response.data);\r\n        vm.products = response.data.products;\r\n        vm.pagination = response.data.pagination;\r\n        vm.isLoading = false;\r\n      });\r\n    },\r\n    openModal(isNew, item) {\r\n      if (isNew) {\r\n        (this.temProduct = {}), (this.isNew = true);\r\n      } else {\r\n        this.temProduct = Object.assign({}, item); //因為使用 = item會傳參考 資料會相同 使用ES6 objsect.assgin 把item資料寫入assgin({})物件裡面\r\n        this.isNew = false;\r\n      }\r\n      $(\"#ProductModal\").modal(\"show\");\r\n    },\r\n    delProductModal(item) {\r\n      this.temProduct = Object.assign({}, item); //點擊此商品刪除按鈕時會把item資料帶進來這裡的item 寫進assgin裡面 再把temProduct修改為點擊的商品資料\r\n      $(\"#delProductModal\").modal(\"show\");\r\n    },\r\n    deldata() {\r\n      //刪除伺服器api的資料\r\n      const vm = this;\r\n      let api = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/product/${vm.temProduct.id}`; //取得點擊商品資料的ID位置\r\n      console.log(api);\r\n      this.$http.delete(api).then(response => {\r\n        //使用delete發送請求給伺服器刪除這產品ID資料\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          $(\"#delProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n        } else {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n          console.log(\"刪除失敗\");\r\n        }\r\n      });\r\n    },\r\n    uploadFild() {\r\n      console.log(this);\r\n      const uploaderFile = this.$refs.files.files[0];\r\n      const vm = this;\r\n      const formData = new FormData(); //上傳跟api不一樣 要先使用formdata = new formData()\r\n      formData.append(\"file-to-upload\", uploaderFile); //然後把formData資料上傳上去欄位:file-to-upload 然後上傳檔案uploaderFile\r\n      const url = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/upload`;\r\n      vm.status.fileLoadiing = true;\r\n      this.$http\r\n        .post(url, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\" //要設定上傳的headers type 以物件傳送\r\n          }\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          vm.status.fileLoadiing = false;\r\n          if (response.data.success) {\r\n            //vm.temProduct.imageUrl = response.data.imageUrl; //上傳時沒包含console.log 裡面沒包含set get 如沒寫入到此元件內 無法使用v-model雙向綁定 會沒有效果\r\n            //console.log(vm.temProduct)\r\n            vm.$set(vm.temProduct, \"imageUrl\", response.data.imageUrl); //把路徑強制寫入 第一個是欄位 第二是裡面的imageUrl 再來是要寫入的路徑response.data.imageUrl\r\n          } else {\r\n            this.$bus.$emit(\"message:push\", response.data.message, \"danger\");\r\n          }\r\n        });\r\n    },\r\n    updateProduct() {\r\n      let api = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/product`;\r\n\r\n      let httpMethos = \"post\";\r\n      const vm = this;\r\n\r\n      if (!vm.isNew) {\r\n        api = `${process.env.APIPATH}/api/${\r\n          process.env.COUSTOMPATH\r\n        }/admin/product/${vm.temProduct.id}`;\r\n        httpMethos = \"put\";\r\n      }\r\n      console.log(api);\r\n      this.$http[httpMethos](api, { data: vm.temProduct }).then(response => {\r\n        console.log(response.data);\r\n        //vm.products = response.data.products;\r\n        if (response.data.success) {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n        } else {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n          console.log(\"新增失敗\");\r\n        }\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts();\r\n    //第一個欄位放剛剛on裡面註冊的方法  第二個欄位是傳入的訊息 第三個欄位是status\r\n    //然後觸發bus emit的方法 觸發外層alter 跟元件內層資料要往外層送的意思一樣使用emit 只是他還要再使用bus這個實體方法呼叫 因為是在bus設定messaage:push方法\r\n  }\r\n};\r\n",{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2OA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Products.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <loading :active.sync=\"isLoading\"></loading>\r\n    <!-- 載入時的動畫效果 -->\r\n    <div class=\"text-right\">\r\n      <button class=\"btn btn-primary\" @click=\"openModal(true)\">建立新產品</button>\r\n    </div>\r\n    <table class=\"table mt-4\">\r\n      <thead>\r\n        <th width=\"120\">分類</th>\r\n        <th>產品名稱</th>\r\n        <th width=\"100\">原價</th>\r\n        <th width=\"100\">價格</th>\r\n        <th width=\"120\">是否啟用</th>\r\n        <th width=\"120\">編輯</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"item in products\" :key=\"item.id\">\r\n          <td>{{item.category}}</td>\r\n          <td>{{item.title}}</td>\r\n          <td class=\"text-right\">{{item.origin_price | currency}}</td>\r\n          <!-- 在後面加 |currency時是使用$字號 -->\r\n          <td class=\"text-right\">{{item.price | currency}}</td>\r\n          <td>\r\n            <span class=\"text-success\" v-if=\"item.is_enabled\">啟用</span>\r\n            <span v-if=\"!item.is_enabled\">未啟用</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"btn btn-outline-primary btn-sm\" @click=\"openModal(false,item)\">編輯</span>\r\n            <span class=\"btn btn-outline-danger btn-sm\" @click=\"delProductModal(item)\">刪除</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination :pages=\"pagination\" @returnPageData=\"getProducts\"></Pagination>\r\n\r\n    <!-- modal -->\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"ProductModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content border-0\">\r\n          <div class=\"modal-header bg-dark text-white\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n              <span>新增產品</span>\r\n            </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"image\">輸入圖片網址</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"image\"\r\n                    placeholder=\"請輸入圖片連結\"\r\n                    v-model=\"temProduct.imageUrl\"\r\n                  >\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"customFile\">\r\n                    或 上傳圖片\r\n                    <i class=\"fas fa-cog fa-spin\" v-if=\"status.fileLoadiing\"></i>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"customFile\"\r\n                    class=\"form-control\"\r\n                    ref=\"files\"\r\n                    @change=\"uploadFild\"\r\n                  >\r\n                </div>\r\n                <img\r\n                  img=\"https://images.unsplash.com/photo-1483985988355-763728e1935b?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=828346ed697837ce808cae68d3ddc3cf&auto=format&fit=crop&w=1350&q=80\"\r\n                  class=\"img-fluid\"\r\n                  :src=\"temProduct.imageUrl\"\r\n                  alt\r\n                >\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"title\">標題</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"title\"\r\n                    placeholder=\"請輸入標題\"\r\n                    v-model=\"temProduct.title\"\r\n                  >\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                  <div class=\"form-group col-md-6\">\r\n                    <label for=\"category\">分類</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"category\"\r\n                      placeholder=\"請輸入分類\"\r\n                      v-model=\"temProduct.category\"\r\n                    >\r\n                  </div>\r\n                  <div class=\"form-group col-md-6\">\r\n                    <label for=\"price\">單位</label>\r\n                    <input\r\n                      type=\"unit\"\r\n                      class=\"form-control\"\r\n                      id=\"unit\"\r\n                      placeholder=\"請輸入單位\"\r\n                      v-model=\"temProduct.unit\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                  <div class=\"form-group col-md-6\">\r\n                    <label for=\"origin_price\">原價</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      id=\"origin_price\"\r\n                      placeholder=\"請輸入原價\"\r\n                      v-model=\"temProduct.origin_price\"\r\n                    >\r\n                  </div>\r\n                  <div class=\"form-group col-md-6\">\r\n                    <label for=\"price\">售價</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      id=\"price\"\r\n                      placeholder=\"請輸入售價\"\r\n                      v-model=\"temProduct.price\"\r\n                    >\r\n                  </div>\r\n\r\n                   <div class=\"form-group col-md-6\">\r\n                    <label for=\"price\">數量</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      id=\"price\"\r\n                      placeholder=\"請輸入數量\"\r\n                      v-model=\"temProduct.count\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <hr>\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"description\">產品描述</label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"description\"\r\n                    placeholder=\"請輸入產品描述\"\r\n                    v-model=\"temProduct.description\"\r\n                  ></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"content\">說明內容</label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"content\"\r\n                    placeholder=\"請輸入產品說明內容\"\r\n                    v-model=\"temProduct.content\"\r\n                  ></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id=\"is_enabled\"\r\n                      v-model=\"temProduct.is_enabled\"\r\n                      :true-value=\"1\"\r\n                      :false-value=\"0\"\r\n                    >\r\n                    <label class=\"form-check-label\" for=\"is_enabled\">是否啟用</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">取消</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"updateProduct\">確認</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"delProductModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content border-0\">\r\n          <div class=\"modal-header bg-danger text-white\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n              <span>刪除產品</span>\r\n            </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            是否刪除\r\n            <strong class=\"text-danger\">{{ temProduct.title }}</strong> 商品(刪除後將無法恢復)。\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">取消</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" @click=\"deldata()\">確認刪除</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from \"jquery\"; //載入Jquery套件 因為$是Jquery的 元件無法使用 要載入\r\nimport Pagination from \"../components/Pagination.vue\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      temProduct: {},\r\n      isNew: false,\r\n      isLoading: false,\r\n      status: {\r\n        fileLoadiing: false\r\n      },\r\n      pagination: {}\r\n    };\r\n  },\r\n  components: {\r\n    Pagination\r\n  },\r\n  methods: {\r\n    getProducts(page = 1) {\r\n      //ES6用法 如果有傳參數近來 使用傳進來的參數 如果沒有 使用預設值1\r\n      const api = `${process.env.VUE_APP_APIPATH}/api/${\r\n        process.env.VUE_APP_COUSTOMPATH\r\n      }/admin/products?page=${page}`;\r\n      const vm = this;\r\n      vm.isLoading = true;\r\n      console.log(api);\r\n      this.$http.get(api).then(response => {\r\n        console.log(response.data);\r\n        vm.products = response.data.products;\r\n        vm.pagination = response.data.pagination;\r\n        vm.isLoading = false;\r\n      });\r\n    },\r\n    openModal(isNew, item) {\r\n      if (isNew) {\r\n        (this.temProduct = {}), (this.isNew = true);\r\n      } else {\r\n        this.temProduct = Object.assign({}, item); //因為使用 = item會傳參考 資料會相同 使用ES6 objsect.assgin 把item資料寫入assgin({})物件裡面\r\n        this.isNew = false;\r\n      }\r\n      $(\"#ProductModal\").modal(\"show\");\r\n    },\r\n    delProductModal(item) {\r\n      this.temProduct = Object.assign({}, item); //點擊此商品刪除按鈕時會把item資料帶進來這裡的item 寫進assgin裡面 再把temProduct修改為點擊的商品資料\r\n      $(\"#delProductModal\").modal(\"show\");\r\n    },\r\n    deldata() {\r\n      //刪除伺服器api的資料\r\n      const vm = this;\r\n      let api = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/product/${vm.temProduct.id}`; //取得點擊商品資料的ID位置\r\n      console.log(api);\r\n      this.$http.delete(api).then(response => {\r\n        //使用delete發送請求給伺服器刪除這產品ID資料\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          $(\"#delProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n        } else {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n          console.log(\"刪除失敗\");\r\n        }\r\n      });\r\n    },\r\n    uploadFild() {\r\n      console.log(this);\r\n      const uploaderFile = this.$refs.files.files[0];\r\n      const vm = this;\r\n      const formData = new FormData(); //上傳跟api不一樣 要先使用formdata = new formData()\r\n      formData.append(\"file-to-upload\", uploaderFile); //然後把formData資料上傳上去欄位:file-to-upload 然後上傳檔案uploaderFile\r\n      const url = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/upload`;\r\n      vm.status.fileLoadiing = true;\r\n      this.$http\r\n        .post(url, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\" //要設定上傳的headers type 以物件傳送\r\n          }\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          vm.status.fileLoadiing = false;\r\n          if (response.data.success) {\r\n            //vm.temProduct.imageUrl = response.data.imageUrl; //上傳時沒包含console.log 裡面沒包含set get 如沒寫入到此元件內 無法使用v-model雙向綁定 會沒有效果\r\n            //console.log(vm.temProduct)\r\n            vm.$set(vm.temProduct, \"imageUrl\", response.data.imageUrl); //把路徑強制寫入 第一個是欄位 第二是裡面的imageUrl 再來是要寫入的路徑response.data.imageUrl\r\n          } else {\r\n            this.$bus.$emit(\"message:push\", response.data.message, \"danger\");\r\n          }\r\n        });\r\n    },\r\n    updateProduct() {\r\n      let api = `${process.env.APIPATH}/api/${\r\n        process.env.COUSTOMPATH\r\n      }/admin/product`;\r\n\r\n      let httpMethos = \"post\";\r\n      const vm = this;\r\n\r\n      if (!vm.isNew) {\r\n        api = `${process.env.APIPATH}/api/${\r\n          process.env.COUSTOMPATH\r\n        }/admin/product/${vm.temProduct.id}`;\r\n        httpMethos = \"put\";\r\n      }\r\n      console.log(api);\r\n      this.$http[httpMethos](api, { data: vm.temProduct }).then(response => {\r\n        console.log(response.data);\r\n        //vm.products = response.data.products;\r\n        if (response.data.success) {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n        } else {\r\n          $(\"#ProductModal\").modal(\"hide\");\r\n          vm.getProducts();\r\n          console.log(\"新增失敗\");\r\n        }\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts();\r\n    //第一個欄位放剛剛on裡面註冊的方法  第二個欄位是傳入的訊息 第三個欄位是status\r\n    //然後觸發bus emit的方法 觸發外層alter 跟元件內層資料要往外層送的意思一樣使用emit 只是他還要再使用bus這個實體方法呼叫 因為是在bus設定messaage:push方法\r\n  }\r\n};\r\n</script>\r\n"]}]}